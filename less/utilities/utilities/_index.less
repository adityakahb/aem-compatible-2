.generate-heights-widths(@n, @bp-prefix, @i: 1) when (@i =< @n) {
  .@{className-heights}@{bp-prefix}-@{i} {
    height: round((100% / @i), 2) !important;
  }
  .@{className-widths}@{bp-prefix}-@{i} {
    width: round((100% / @i), 2) !important;
  }
  .generate-heights-widths(@n, @bp-prefix, (@i + 1));
}
.loopUtilities(@bp-prefix) {
  each(@textAlign, {
    .@{className-text-align}@{bp-prefix}-@{key} {
      text-align: @value !important;
    }
  });
  each(@textDecoration, {
    .@{className-text-decoration}@{bp-prefix}-@{key} {
      text-decoration: @value !important;
    }
  });
  each(@positionTypes, {
    .@{className-position}@{bp-prefix}-@{key} {
      position: @value !important;
    }
  });
  .@{className-heights}-auto {
    height: auto !important;
  }
  .@{className-widths}-auto {
    width: auto !important;
  }
  .generate-heights-widths(@grid-columns, @bp-prefix);
};
each(@breakpoints, {
  .defineBreakpointAttributes(@index, @key, @value);
  & when (boolean(@bpkey = xs) = true) {
    .loopUtilities(~'');
  }
  & when (boolean(@bpkey = xs) = false) {
    @media (min-width: @bpvalue) {
      .loopUtilities(~'-@{bpkey}');
    }
  }
});
.embedded {
  background-color: @grays[gray00];
  display: block;
  overflow: hidden;
  padding: 0;
  position: relative;
  width: 100%;
  &.embedded-16x9 {
    &:before {
      content: '';
      display: block;
      padding-bottom: 56.25%;
    }
  }
  &.embedded-4x3 {
    &:before {
      content: '';
      display: block;
      padding-bottom: 75%;
    }
  }
  .embedded-item, iframe, embed, object, video {
    .center-center();
    width: 100%;
    height: 100%;
    border: 0;
  }
}